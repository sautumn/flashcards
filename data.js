module.exports = [
  {
    question: 'Whats an angular directive and why should you implement one?',
    answer: 'Angular directives are JavaScript functions that manipulate and add behaviors to HTML DOM elements. A main advantage of the directive, in addition to being intuitive-looking as its declarative aspect resides inline in your markup, is that it is a reusable component.',
    sourcetitle: 'Angular directives quick overview · tim-hr/stuff Wiki',
    sourceurl: 'https://github.com/tim-hr/stuff/wiki/Angular-directives-quick-overview',
    tag: 'Angular',
  },
  {
    question: 'What are the major differences between React and Angular?',
    answer: 'Angular is full MVC framework that uses DOM directives, factories, and filters. More powerful than React due to its full MVC archictecture, but suffers a performance hit.<br><br>React is faster, newer, uses the virtual DOM and JSX. Very lightweight but you have to provide your own controller and model. Redux can be used as the model and regular JS as the controller.',
    sourcetitle: 'Basic-Differences-Between-AngularJS-and-React-484781-2.jpg (2000×2829)',
    sourceurl: 'http://i1-news.softpedia-static.com/images/news2/Basic-Differences-Between-AngularJS-and-React-484781-2.jpg',
    tag: 'Frameworks',
  },
  {
    question: 'What is Webpack? What is Babel?',
    answer: 'Webpack is a module bundler which takes modules with dependencies and generates static assets by bundling them together based on some configuration.<br><br> Babel translates ES6 and JSX into a format that is supported by the browser.<br><br>Webpack uses loaders to translate files and often times Webpack will be used inconjunction with Babel to translate files for use in the browser.',
    sourcetitle: 'Setting Up a React.js Environment Using Npm, Babel 6 and Webpack | Codementor',
    sourceurl: 'https://www.codementor.io/tamizhvendan/beginner-guide-setup-reactjs-environment-npm-babel-6-webpack-du107r9zr',
    tag: 'React',
  },
  {
    question: 'What does <!doctype html> do?',
    answer: 'DOCTYPEs are required for legacy reasons. When omitted, browsers tend to use a different rendering mode that is incompatible with some specifications. Including the DOCTYPE in a document ensures that the browser makes a best-effort attempt at following the relevant specifications.',
    sourcetitle: 'What does <!doctype html> do? - stackoverflow',
    sourceurl: 'http://stackoverflow.com/questions/7695044/what-does-doctype-html-do',
    tag: 'HTML',
  },
  {
    question: 'What\'s the difference between HTML and XHTML?',
    answer: 'HTML5 has two parsing modes or syntaxes: HTML and XML. The difference depends on whether the document is served with a Content-type: text/html header or a Content-type: application/xml+xhtml header.<br><br>xHTML is the XML version of HTML. Stricter than HTML. Elements and attributes must be in lower case, end tags are required for all elements, attribute values must always be quoted, among other rules.',
    sourcetitle: 'XHTML vs HTML',
    sourceurl: 'http://www.tutorialspoint.com/xhtml/xhtml_vs_html.htm',
    tag: 'HTML',
  },
  {
    question: 'What is progressive enhancement?',
    answer: 'Starting with a baseline of usable functionality, then increasing the richness of the user experience step by step by testing for support for enhancements before applying them.',
    sourcetitle: 'Graceful degradation versus progressive enhancement - W3C Wiki',
    sourceurl: 'https://www.w3.org/wiki/Graceful_degradation_versus_progressive_enhancement',
    tag: 'General',
  },
  {
    question: 'What is graceful degradation?',
    answer: 'The practice of building your web functionality so that it provides a certain level of user experience in more modern browsers, but it will also degrade gracefully to a lower level of user in experience in older browsers. This lower level is not as nice to use for your site visitors, but it does still provide them with the basic functionality that they came to your site to use; things do not break for them.',
    sourcetitle: 'What is "Graceful Degradation" in Web Design?',
    sourceurl: 'http://webdesign.about.com/od/webdesignglossary/g/graceful-degradation.htm',
    tag: 'General',
  },
  {
    question: 'What is BEM?',
    answer: 'The Block, Element, Modifier methodology (commonly referred to as BEM) is a popular naming convention for classes in HTML and CSS. Developed by the team at Yandex, its goal is to help developers better understand the relationship between the HTML and CSS in a given project.',
    sourcetitle: 'BEM 101',
    sourceurl: 'https://css-tricks.com/bem-101/',
    tag: 'CSS',
  },
  {
    question: 'What does CORS stand for and what issue does it address?',
    answer: 'Cross-origin resource sharing (CORS) is a mechanism that allows restricted resources (e.g. fonts, JavaScript, etc.) on a web page to be requested from another domain outside the domain from which the resource originated. <br><br>CORS defines a way in which a browser and server can interact to safely determine whether or not to allow the cross-origin request. It allows for more freedom and functionality than purely same-origin requests, but is more secure than simply allowing all cross-origin requests. It is a recommended standard of the W3C.',
    sourcetitle: 'Cross-origin resource sharing - Wikipedia',
    sourceurl: 'https://en.m.wikipedia.org/wiki/Cross-origin_resource_sharing',
    tag: 'General',
  },
  {
    question: 'What\'s the difference between full standards mode, almost standards mode and quirks mode?',
    answer: 'They are modes used by browser rendering engines. In the standards mode, the engine will render a page as HTML and CSS specifications specify. The quirks mode is to render legacy pages written before these standards are fixed. The legacy pages contain non-standard behaviours emulated in old browsers such as Internet Explorer 5 or Navigator 4.',
    sourcetitle: 'Quirks mode - Wikipedia',
    sourceurl: 'https://en.wikipedia.org/wiki/Quirks_mode',
    tag: 'HTML',
  },
  {
    question: 'What is progressive rendering?',
    answer: 'Progressive rendering is the name given to techniques used to render content for display as quickly as possible. It used to be much more prevalent in the days before broadband internet but it\'s still useful in modern development as mobile data connections are becoming increasingly popular (and unreliable!)<br><br>Examples of such techniques :<br>Lazy loading of images where (typically) some javascript will load an image when it comes into the browsers viewport instead of loading all images at page load.<br>Prioritizing visible content (or above the fold rendering) where you include only the minimum css/content/scripts necessary for the amount of page that would be rendered in the users browser first to display as quickly as possible, you can then use deferred javascript (domready/load) to load in other resources and content.',
    sourcetitle: 'Progressive Image Rendering',
    sourceurl: 'https://blog.codinghorror.com/progressive-image-rendering/',
    tag: 'General',
  },
];
